<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="7" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="86" started-at="2013-09-12T16:09:34Z" finished-at="2013-09-12T16:09:34Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="86" started-at="2013-09-12T16:09:34Z" finished-at="2013-09-12T16:09:34Z">
      <class name="sample.NICPropNGTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:sample.NICPropNGTest@1ee145b]" name="setUpClass" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="testGetId()[pri:0, instance:sample.NICPropNGTest@1ee145b]" name="testGetId" duration-ms="4" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetId -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.NICPropNGTest@1ee145b]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.NICPropNGTest@1ee145b]" name="tearDownMethod" is-config="true" duration-ms="1" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:sample.NICPropNGTest@1ee145b]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- sample.NICPropNGTest -->
      <class name="sample.InterpreterNGTest">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpClass" is-config="true" duration-ms="8" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpMethod" is-config="true" duration-ms="1" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="testCreateNICProp()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="testCreateNICProp" duration-ms="3" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <exception class="sample.InvalidNICPropException">
            <message>
              <![CDATA[Invalid data entered!!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[sample.InvalidNICPropException: Invalid data entered!!!
	at sample.Interpreter.createNICProp(Interpreter.java:51)
	at sample.InterpreterNGTest.testCreateNICProp(InterpreterNGTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- sample.InvalidNICPropException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateNICProp -->
        <test-method status="PASS" signature="testGetBirthday()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="testGetBirthday" duration-ms="57" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBirthday -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="testGetGender()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="testGetGender" duration-ms="1" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGender -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="testInterpret()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="testInterpret" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterpret -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="testIsVoter()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="testIsVoter" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsVoter -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownMethod" is-config="true" duration-ms="1" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="testValidate()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="testValidate" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidate -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:sample.InterpreterNGTest@e51510]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2013-09-12T21:39:34Z" finished-at="2013-09-12T21:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- sample.InterpreterNGTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
